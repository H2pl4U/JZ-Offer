package 剑指offer;

/**
 * 每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。
 * HF作为牛客的资深元老,自然也准备了一些小游戏。其中,有个游戏是这样的:首
 * 先,让小朋友们围成一个大圈。然后,他随机指定一个数m,让编号为0的小朋友开始
 * 报数。每次喊到m-1的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选
 * 礼物,并且不再回到圈中,从他的下一个小朋友开始,继续0...m-1报数....这样下去....
 * 直到剩下最后一个小朋友,可以不用表演,并且拿到牛客名贵的“名侦探柯南”典藏
 * 版(名额有限哦!!^_^)。请你试着想下,哪个小朋友会得到这份礼品呢？
 * (注：小朋友的编号是从0到n-1)
 * 
 * 本题知识点： 链表 数学
 * @author ilovejava1314
 */
public class 孩子们的游戏46 {
	/*
	 * 思路:
	 * 	首先推出x'=(x+k)%n,令f[i]表示i个人玩游戏报m退出最
	 * 后胜利者的编号，最后的结果自然是f[n]。
	 * 递推公式
	 * f[1]=0;
	 * f[i]=(f[i-1]+m)%i;  (i>1)
	 * 有了这个公式，我们要做的就是从1-n顺序算出f[i]的数值，
	 * 最后结果是f[n]。 因为实际生活中编号总是从1开始，我们
	 * 输出f[n]+1。
	 * -----------------------------------------------
	 * 运行时间：20ms
	 * 占用内存：9372k
	 */
	public int LastRemaining_Solution(int n, int m) {
		if(n==0) return -1;
		if(n==1) return 0;
		else return (LastRemaining_Solution(n-1, m)+m)%n;
    }
	
	/*
	 * 思路:
	 * 	公式的循环求解，类似递归但更直观
	 * -----------------------------------
	 * 运行时间：15ms
	 * 占用内存：9304k
	 */
	public int LastRemaining_Solution2(int n, int m){
		if(n==0||m==0)return -1;
		int s=0;
		for(int i=2;i<=n;i++)
			s=(s+m)%i;
	    return s ;
	 }

}
